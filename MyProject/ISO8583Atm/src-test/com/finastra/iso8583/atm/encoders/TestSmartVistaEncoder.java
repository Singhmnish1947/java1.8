package com.finastra.iso8583.atm.encoders;

import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffers;
import org.jboss.netty.channel.ChannelDownstreamHandler;
import org.jboss.netty.handler.codec.embedder.EncoderEmbedder;
import org.jboss.netty.util.CharsetUtil;
import org.junit.Assert;
import org.junit.Test;

public class TestSmartVistaEncoder

{
  private int lengthFieldOffset = "".length();
  private int lengthFieldLength = 4;
  private int mtiFieldLength = 4;
  private int primaryBitMapOffset = this.lengthFieldOffset + this.lengthFieldLength + this.mtiFieldLength;
  private int primaryBitMapLength = 16;
  private int secondaryBitMapLength = 16;
  String responseMsg1100 = "04201100F47405C1AEE1A0000100000E14000000164407830017770679010000000000001000000000001000610000007836541201131702131311511101913146100150360110644078206RTPSID374407830017770679=13111211019483600000201317783654681213000ATM0255 00680255       40NANYUKIBR001>NANYUKI                  KE009AO50O222 KESKES077L01071AC1000AL100210AM10041000CY1003KESLID00518699OTY00312ZRTY00311ZTYP00312Z11Bush_Inside089750002018ROWN0118523578365411Bush_Inside0210";
  String responseMsg1200 = "04461200F67405D9AEE1A0000100000E140000001644078300177706790100000000000010000000000010000113171320610000007836581201131713201311511101913146200150360111201131010644078206RTPSID374407830017770679=13111211019483600000201317783658891553000ATM0255 00680255       40NANYUKIBR001>NANYUKI                  KE009AO50O222 KESKES084T01078AC1000ACT001CAM00041000AM10041000CY0003KESCY1003KESOTY003207RTY003227TYP00320711Bush_Inside089750002018ROWN0118523578365811Bush_Inside0210";
  String responseMsg1220 = "04071220F67405D98EE1A0000100000E140000001644078300177706790100000000000010000000000010000113171448610000007836591201131714481311511101913146200150360111201131010644078206RTPSID201317783659403155000ATM0255 00680255       40NANYUKIBR001>NANYUKI                  KE009AO50O222 KESKES084T01078AC1000ACT001CAM00041000AM10041000CY0003KESCY1003KESOTY003207RTY003227TYP00320711Bush_Inside089750002018ROWN0118523578365911Bush_Inside0210";
  String responseMsg1420 = "04601420F47405C58EE1A1000100000E140000001644078300177706790100000000000010000000000010006100000078365612011317113013115111019131464004001601124        1000        10000644078206RTPSID201317783654681213400ATM0255 00680255       40NANYUKIBR001>NANYUKI                  KE009AO50O222 KESKES30110078365412011317021306440782100L01071AC1000AL100210AM10041000CY1003KESLID00518701OTY00312ZRTY00312ZTYP00311ZORG017MID0118523578365411Bush_Inside0642800018ROWN0118523578365611Bush_Inside0210";
  String responseMsg1804example1 = "003318040030010000000000232336120213124413801";
  String responseMsg1804example2 = "003318040030010000000000232336120213124413802";
  String responseMsg1804example3 = "003318040030010000000000232336120213124413831";
  String encodedMsg1100 = "3034323031313030f47405c1aee1a0000100000e140000003136343430373833303031373737303637393031303030303030303030303030313030303030303030303030313030303631303030303030373833363534313230313133313730323133313331313531313130313931333134363130303135303336303131303634343037383230365254505349443337343430373833303031373737303637393d313331313132313130313934383336303030303032303133313737383336353436383132313330303041544d303235352030303638303235352020202020202034304e414e59554b4942523030313e4e414e59554b492020202020202020202020202020202020204b45303039414f35304f323232204b45534b45533037374c3031303731414331303030414c313030323130414d31303034313030304359313030334b45534c494430303531383639394f545930303331325a52545930303331315a54595030303331325a3131427573685f496e73696465303839373530303032303138524f574e30313138353233353738333635343131427573685f496e7369646530323130";
  String encodedMsg1200 = "3034343631323030f67405d9aee1a0000100000e14000000313634343037383330303137373730363739303130303030303030303030303031303030303030303030303031303030303131333137313332303631303030303030373833363538313230313133313731333230313331313531313130313931333134363230303135303336303131313230313133313031303634343037383230365254505349443337343430373833303031373737303637393d313331313132313130313934383336303030303032303133313737383336353838393135353330303041544d303235352030303638303235352020202020202034304e414e59554b4942523030313e4e414e59554b492020202020202020202020202020202020204b45303039414f35304f323232204b45534b455330383454303130373841433130303041435430303143414d3030303431303030414d31303034313030304359303030334b45534359313030334b45534f54593030333230375254593030333232375459503030333230373131427573685f496e73696465303839373530303032303138524f574e30313138353233353738333635383131427573685f496e7369646530323130";
  String encodedMsg1220 = "3034303731323230f67405d98ee1a0000100000e140000003136343430373833303031373737303637393031303030303030303030303030313030303030303030303030313030303031313331373134343836313030303030303738333635393132303131333137313434383133313135313131303139313331343632303031353033363031313132303131333130313036343430373832303652545053494432303133313737383336353934303331353530303041544d303235352030303638303235352020202020202034304e414e59554b4942523030313e4e414e59554b492020202020202020202020202020202020204b45303039414f35304f323232204b45534b455330383454303130373841433130303041435430303143414d3030303431303030414d31303034313030304359303030334b45534359313030334b45534f54593030333230375254593030333232375459503030333230373131427573685f496e73696465303839373530303032303138524f574e30313138353233353738333635393131427573685f496e7369646530323130";
  String encodedMsg1420 = "3034363031343230f47405c58ee1a1000100000e14000000313634343037383330303137373730363739303130303030303030303030303031303030303030303030303031303030363130303030303037383336353631323031313331373131333031333131353131313031393133313436343030343030313630313132342020202020202020313030302020202020202020313030303036343430373832303652545053494432303133313737383336353436383132313334303041544d303235352030303638303235352020202020202034304e414e59554b4942523030313e4e414e59554b492020202020202020202020202020202020204b45303039414f35304f323232204b45534b455333303131303037383336353431323031313331373032313330363434303738323130304c3031303731414331303030414c313030323130414d31303034313030304359313030334b45534c494430303531383730314f545930303331325a52545930303331325a54595030303331315a4f52473031374d494430313138353233353738333635343131427573685f496e7369646530363432383030303138524f574e30313138353233353738333635363131427573685f496e7369646530323130";
  String encodedMsg1804Example1 = "30303333313830340030010000000000323332333336313230323133313234343133383031";
  String encodedMsg1804Example2 = "30303333313830340030010000000000323332333336313230323133313234343133383032";
  String encodedMsg1804Example3 = "30303333313830340030010000000000323332333336313230323133313234343133383331";
  
  @Test
  public void testSmartVistaEncodersForResponseMsg1100()
  {
    smartVistaEncoder(this.responseMsg1100, this.encodedMsg1100);
  }
  
  @Test
  public void testSmartVistaEncodersForResponseMsg1200()
  {
    smartVistaEncoder(this.responseMsg1200, this.encodedMsg1200);
  }
  
  @Test
  public void testSmartVistaEncodersForResponseMsg1220()
  {
    smartVistaEncoder(this.responseMsg1220, this.encodedMsg1220);
  }
  
  @Test
  public void testSmartVistaFrameEncodersForRequestMsg1420()
  {
    smartVistaEncoder(this.responseMsg1420, this.encodedMsg1420);
  }
  
  @Test
  public void testSmartVistaFrameEncodersForRequestMsg1804Example1()
  {
    smartVistaEncoder(this.responseMsg1804example1, this.encodedMsg1804Example1);
  }
  
  @Test
  public void testSmartVistaFrameEncodersForRequestMsg1804Example2()
  {
    smartVistaEncoder(this.responseMsg1804example2, this.encodedMsg1804Example2);
  }
  
  @Test
  public void testSmartVistaFrameEncodersForRequestMsg1804Example3()
  {
    smartVistaEncoder(this.responseMsg1804example3, this.encodedMsg1804Example3);
  }
  
  @SuppressWarnings({ "rawtypes", "unchecked" })
private void smartVistaEncoder(String responseMsg, String encodedMsg)
  {
    EncoderEmbedder<ChannelBuffer> embedder = new EncoderEmbedder(new ChannelDownstreamHandler[] { new SmartVistaFrameEncoder(this.lengthFieldOffset, this.lengthFieldLength, false, CharsetUtil.US_ASCII), new SmartVistaStringEncoder(this.primaryBitMapOffset, this.primaryBitMapLength, this.secondaryBitMapLength, CharsetUtil.US_ASCII) });
    
    embedder.offer(responseMsg);
    
    ChannelBuffer encoded = embedder.poll();
    
    Assert.assertEquals(encodedMsg, ChannelBuffers.hexDump(encoded));
  }
  
  public static byte[] hexStringToByteArray(String s)
  {
    int len = s.length();
    byte[] data = new byte[len / 2];
    for (int i = 0; i < len; i += 2) {
      data[(i / 2)] = ((byte)((Character.digit(s.charAt(i), 16) << 4) + Character.digit(s.charAt(i + 1), 16)));
    }
    return data;
  }
}
