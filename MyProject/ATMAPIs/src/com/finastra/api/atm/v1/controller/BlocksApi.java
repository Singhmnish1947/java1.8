/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.finastra.api.atm.v1.controller;

import java.util.UUID;

import javax.validation.Valid;
import javax.validation.constraints.Size;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.finastra.api.atm.v1.model.AccountBlockResponse;
import com.finastra.api.error.v1.model.ErrorResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-01-06T09:31:53.977Z")

@Api(value = "blocks", description = "the blocks API")
@RequestMapping(value = "")
public interface BlocksApi {

    @ApiOperation(value = "Retrieve blocks for a given account", nickname = "searchBlocksbyAccountId", notes = "Retrieve blocks for a given account", response = AccountBlockResponse.class, authorizations = {
        @Authorization(value = "Oauth2", scopes = {
            
            })
    }, tags={ "Account blocks Enquiry", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Search is successful", response = AccountBlockResponse.class),
        @ApiResponse(code = 400, message = "Error", response = ErrorResponse.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "Forbidden", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "Not Found", response = ErrorResponse.class),
        @ApiResponse(code = 500, message = "Internal server error", response = ErrorResponse.class) })
    @RequestMapping(value = "/blocks/{accountId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<AccountBlockResponse> searchBlocksbyAccountId(@ApiParam(value = "A unique ID of the request, unique to the call, as determined by the initiating party. A UUID must be set in this header to uniquely identify the request" ,required=true) @RequestHeader(value="X-Request-ID", required=true) UUID xRequestID,@Size(max=20) @ApiParam(value = "Specific Account Number to search for existing blocked Transaction",required=true) @PathVariable("accountId") String accountId,@ApiParam(value = "The maximum number of rows that may be returned. This parameter can be thought of as the page size", defaultValue = "10") @Valid @RequestParam(value = "limit", required = false, defaultValue="10") Integer limit,@ApiParam(value = "Set to offset the results to a particular row count  Example: GET /accountId?offset=100 will return the ATM/POS Block details of 101 and more", defaultValue = "0") @Valid @RequestParam(value = "offset", required = false, defaultValue="0") Integer offset);

}
