/**
 * * Copyright (c) 2016 Misys International Financial Systems Ltd. All Rights Reserved.
 *
 * This software is the proprietary information of Misys International Financial Systems Ltd.
 * Use is subject to license terms.
 */
package com.misys.ub.dc.sql.constants;

public class TransactionHistoryQuery {

	public String TRANSACTION_LIST_QUERY =
			  "SELECT T.TRANSACTIONID, "
			+ "T.TRANSACTIONSRID AS TRANSACTIONSRID, "
			+ "T.ACCOUNTPRODUCT_ACCPRODID AS ACCOUNTID, "
			+ "T.AMOUNT AS AMOUNT, "
			+ "T.ISOCURRENCYCODE AS CURRENCY,"
            + " T.TRANSACTIONDATE AS TRANSACTIONDATE, "
            + "T.POSTINGDATE AS POSTINGDATE, "
            + "T.VALUEDATE AS VALUEDATE, "
            + "T.NARRATION AS DESCRIPTION, "
            + "T.DEBITCREDITFLAG AS CREDITDEBITINDICATOR, "
            + "T.REFERENCE AS TXNREFERENCEID,"
            + " T.CODE AS TRANSACTIONTYPE, "
            + "T.REVERSALINDICATOR AS STATUS, "
            + "T.BASEEQUIVALENT AS BASEAMOUNTEQUIVALENT, "
            + "T.UBCHANNELID AS CHANNELID, "
            + "T.UBTYPE, "
            + "A.PRODUCTID, "
            + "CP.UBTRANSACTIONID, "
            + "CP.UBCUSTOMERNAME AS CUSTOMERNAME, "
            + "CP.UBCONTRAACCNUM AS CONTRAACCNUM, "
            + "CP.UBTRANSACTIONSUBTYPE AS UBTRANSACTIONSUBTYPE, "
            + "CP.UBCARDNUMBER AS CARDNUMBER,"
            + "CP.UBMERCHANTNAME AS MERCHANTNAME, "
            + "CP.UBTRANSACTIONDIRECTION AS TRANSACTIONDIRECTION, "
            + "CP.UBCHANNELNAME, "
            + "CD.ATMCARDID AS CARDID,"
            + "DD.MPHOSTTXNREFERENCE AS MPHOSTTXNREFERENCE, "
            + "DD.MPPMTIDENDTOENDID AS DIRECTDEBITREFERENCE, "
            + "DD.MPDDTMRIAIDORGCDSCHMID AS CREDITORID, "
            + "DD.MPDDTMRIMNDTID AS MANDATEID, "
            + "DD.MPMESSAGEID, "
            + "CT.MPFILENAME AS PAIN001FILENAME "
            + "FROM UBTB_TRANSACTION T INNER JOIN ACCOUNT A ON T.ACCOUNTPRODUCT_ACCPRODID = A.ACCOUNTID AND  T.POSTINGDATE >= ? "
            + "AND T.POSTINGDATE <= ? AND T.UBTYPE  IN ( 'N','I','P' ) AND T.ACCOUNTPRODUCT_ACCPRODID  IN ";
    // T.UBTYPE IN ( 'N','I','P' ) used to consider only non_static transactions
	
	public String OUTER_JOIN_QUERY = 
			  "LEFT OUTER JOIN UBTB_TRANSACTIONCOUNTERPTYDATA CP ON T.TRANSACTIONID=CP.UBTRANSACTIONID AND ((CP.UBTRANSACTIONID IS NULL) OR "
            + "(CP.UBCHANNELNAME NOT IN ('ATM', 'POS') AND T.DEBITCREDITFLAG ='D' AND CP.UBTRANSACTIONDIRECTION = 'O') OR "
            + "(CP.UBCHANNELNAME NOT IN ('ATM', 'POS') AND T.DEBITCREDITFLAG ='C' AND CP.UBTRANSACTIONDIRECTION = 'I') OR "
            + "(CP.UBCHANNELNAME IN ('ATM', 'POS'))) "
            + "LEFT OUTER JOIN ATMCARDDETAILS CD ON CD.ATMCARDNUMBER=CP.UBUNMASKEDCARDNUMBER "
            + "LEFT OUTER JOIN MPTB_DDTXNINFO DD ON DD.MPHOSTTXNREFERENCE = T.TRANSACTIONID "
            + "AND T.UBCHANNELID = 'MPM'  AND T.DEBITCREDITFLAG = 'D' "
            + "LEFT OUTER JOIN MPTB_CTGRPHDR CT ON CT.MPCTGRPHDRIDPK = T.TRANSACTIONID "
            + "AND T.UBCHANNELID = 'BULKPI' AND T.DEBITCREDITFLAG = 'D' "
            + "ORDER by T.POSTINGDATE DESC ";
	
	public String TRANSACTION_LIST_QUERY_WITH_ATM_API =
			  "SELECT T.TRANSACTIONID, "
			+ "T.TRANSACTIONSRID AS TRANSACTIONSRID, "
			+ "T.ACCOUNTPRODUCT_ACCPRODID AS ACCOUNTID, "
			+ "T.AMOUNT AS AMOUNT, "
			+ "T.ISOCURRENCYCODE AS CURRENCY,"
          + " T.TRANSACTIONDATE AS TRANSACTIONDATE, "
          + "T.POSTINGDATE AS POSTINGDATE, "
          + "T.VALUEDATE AS VALUEDATE, "
          + "T.NARRATION AS DESCRIPTION, "
          + "T.DEBITCREDITFLAG AS CREDITDEBITINDICATOR, "
          + "T.REFERENCE AS TXNREFERENCEID,"
          + " T.CODE AS TRANSACTIONTYPE, "
          + "T.REVERSALINDICATOR AS STATUS, "
          + "T.BASEEQUIVALENT AS BASEAMOUNTEQUIVALENT, "
          + "T.UBCHANNELID AS CHANNELID, "
          + "T.UBTYPE, "
          + "A.PRODUCTID, "
          + "CP.UBTRANSACTIONID, "
          + "CP.UBCUSTOMERNAME AS CUSTOMERNAME, "
          + "CP.UBCONTRAACCNUM AS CONTRAACCNUM, "
          + "CP.UBTRANSACTIONSUBTYPE AS UBTRANSACTIONSUBTYPE, "
          + "CP.UBCARDNUMBER AS CARDNUMBER,"
          + "CP.UBMERCHANTNAME AS MERCHANTNAME, "
          + "CP.UBTRANSACTIONDIRECTION AS TRANSACTIONDIRECTION, "
          + "CP.UBCHANNELNAME, "
          + "CP.UBUNMASKEDCARDNUMBER AS CARDID,"
          + "DD.MPHOSTTXNREFERENCE AS MPHOSTTXNREFERENCE, "
          + "DD.MPPMTIDENDTOENDID AS DIRECTDEBITREFERENCE, "
          + "DD.MPDDTMRIAIDORGCDSCHMID AS CREDITORID, "
          + "DD.MPDDTMRIMNDTID AS MANDATEID, "
          + "DD.MPMESSAGEID, "
          + "CT.MPFILENAME AS PAIN001FILENAME "
          + "FROM UBTB_TRANSACTION T INNER JOIN ACCOUNT A ON T.ACCOUNTPRODUCT_ACCPRODID = A.ACCOUNTID AND  T.POSTINGDATE >= ? "
          + "AND T.POSTINGDATE <= ? AND T.UBTYPE  IN ( 'N','I','P' ) AND T.ACCOUNTPRODUCT_ACCPRODID  IN ";
  // T.UBTYPE IN ( 'N','I','P' ) used to consider only non_static transactions
	public String OUTER_JOIN_QUERY_WITH_ATM_API = 
			  "LEFT OUTER JOIN UBTB_TRANSACTIONCOUNTERPTYDATA CP ON T.TRANSACTIONID=CP.UBTRANSACTIONID AND ((CP.UBTRANSACTIONID IS NULL) OR "
          + "(CP.UBCHANNELNAME NOT IN ('ATM', 'POS') AND T.DEBITCREDITFLAG ='D' AND CP.UBTRANSACTIONDIRECTION = 'O') OR "
          + "(CP.UBCHANNELNAME NOT IN ('ATM', 'POS') AND T.DEBITCREDITFLAG ='C' AND CP.UBTRANSACTIONDIRECTION = 'I') OR "
          + "(CP.UBCHANNELNAME IN ('ATM', 'POS'))) "
          + "LEFT OUTER JOIN MPTB_DDTXNINFO DD ON DD.MPHOSTTXNREFERENCE = T.TRANSACTIONID "
          + "AND T.UBCHANNELID = 'MPM'  AND T.DEBITCREDITFLAG = 'D' "
          + "LEFT OUTER JOIN MPTB_CTGRPHDR CT ON CT.MPCTGRPHDRIDPK = T.TRANSACTIONID "
          + "AND T.UBCHANNELID = 'BULKPI' AND T.DEBITCREDITFLAG = 'D' "
          + "ORDER by T.POSTINGDATE DESC ";
}
