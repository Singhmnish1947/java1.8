package com.misys.test;

import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.Socket;
import java.net.UnknownHostException;

public class TCPATM {

	public static void main(String[] args) throws UnknownHostException, IOException {
		Socket clientSocket = new Socket("localhost", 5150);
		DataOutputStream outToServer = new DataOutputStream(clientSocket.getOutputStream());

		// BPC message

		// CW with BPC data
		/*
		 * String Header = asciiToHex("04821100"); String BitMap =
		 * "FCF6440108E1E4000000000014000000"; String fieldData =
		 * 
		 * // asciiToHex(
		 * "1622222222222222220121000000000015000000000014000000000015000000000000000000000323200826144442251230072260116011016540401111000589395CWBPC207250500000001840436505185116105.Cecil.St>Singapore................SG159001001200200370002500400050260047015027004099902800370203000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321840840840058001012000000001100006016C0000000000008400110120000000013000470151402010TY0001990"
		 * );
		 * 
		 * asciiToHex(
		 * "1611111111111111110121000000000010000000000050000000000030000000000000000000000323200826144442251230072260116011016540401111000589395CWBPC208271700000001840436505185116105.Cecil.St>Singapore................SG159001001200200370002500400050260047014027004099902800370203000266031014100000773092090340141000007730938503601420200630144443039012200630144442065012000000000321840840840058001012000000001100006016C0000000000008400110120000000013000470141402010TY0001998"
		 * );
		 * 
		 */

		// POS

		String Header = asciiToHex("04821100");
		String BitMap = "FCF6440108E1E4000000000014000000";
		String fieldData =

				// asciiToHex("1622222222222222220121000000000015000000000014000000000015000000000000000000000323200826144442251230072260116011016540401111000589395CWBPC207250500000001840436505185116105.Cecil.St>Singapore................SG159001001200200370002500400050260047015027004099902800370203000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321840840840058001012000000001100006016C0000000000008400110120000000013000470151402010TY0001990");

				asciiToHex(
						"1611111111111111110021000000000010000000000050000000000030000000000000000000000323200826144442251230072260116011016540401111000589395POSBPC20800100000009840436505185116105.Cecil.St>Singapore................SG159001001200200377402500400050260047014027004099902800370203000266031014100000773092090340141000007730938503601420200630144443039012200630144442065012000000000321840840840058001012000000001100006016C0000000000008400110120000000013000470141402010TY0001998");

		// asciiToHex("1611111111111111110121000000000023000000000014000000000015000000000000000000000323200826144442251230072260116011016540401111000589395CWBPC207244800000001840436505185116105.Cecil.St>Singapore................SG159001001200200370002500400050260047014027004099902800370203000266031014100000773094010340141000007730939103601420200630144443039012200630144442065012000000000321978840978058001012000000001100006016C0000000000008400110120000000013000470151402010TY0001999");
		String requestMsg1100 = Header + BitMap + fieldData;

		// SingePOS with BPC data
		/*
		 * String Header= asciiToHex("04671100"); String BitMap
		 * ="F4F6440108E1A4000000000014000000"; String fieldData= asciiToHex(
		 * "1611111111111111110021000000000013000000000015006100000061000000000323200723144442251230072260116011016540401111000589395POSPC207223200000009840436505185116105.Cecil.St>Singapore................SG159001001200200377402500400050260049001027004900102800377403000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321978840058001012000000001100006016C0000000000008400110120000000013000470141402010TY0001998"
		 * ); String requestMsg1100 = Header+BitMap+fieldData;
		 */

		/*
		 * String Header= asciiToHex("04821100"); String BitMap
		 * ="FCF6440108E1E4000000000014000000"; String fieldData= asciiToHex(
		 * "1611111111111111110021000000000013000000000014000000000015000000000000000000000323200723144442251230072260116011016540401111000589395POSPC207223000000009840436505185116105.Cecil.St>Singapore................SG159001001200200377402500400050260049001027004900102800377403000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321978978840058001012000000001100006016C0000000000008400110120000000013000470141402010TY0001998"
		 * ); String requestMsg1100 = Header+BitMap+fieldData;
		 */

		// DUAL POS blocking with BPC data FBE 2020.5.2

		/*
		 * String Header= asciiToHex("04821100");
		 * 
		 * String BitMap ="FCF6440108E1E4000000000014000000";
		 */

		// String fieldData=
		// asciiToHex("1611111111111111111821000000000013000000000014000000000015006180000061800000000323200902144442251230072260116011016540401111000589395POSDC20RR04100000009840436505185116105.Cecil.St>Singapore................SG159001001200200373602500400050260047014027014701402800373603000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321840840840058001012000000001400006016C0000000000008400110120000000013000470141402010TY0001999");
		// String fieldData=
		// asciiToHex("1611111111111111111821000000000013000000000014000000000015006180000061800000000323200902144442251230072260116011016540401111000589395POSDC20RR04100000009840436505185116105.Cecil.St>Singapore................SG159001001200200377402500400050260049001027004900102800377403000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321840840840058001012000000001400006016C00000000000084001101200000000130004701415020101PTY000100");

		// Working Dual Pos Blocking Message
		/*
		 * String Header= asciiToHex("02221100"); String BitMap
		 * ="FC9000010881E0000000000014000000";
		 * 
		 * String fieldData= asciiToHex(
		 * "000000000000060020000000003000000000000120000000132009081448321111000589395POS010TESB460000000904800100110020037360260039990250011031010REF000017697897884011110005893941402010TY0001998"
		 * ); String PrimaryAccNo = asciiToHex("161111111111111111"); String
		 * requestMsg1100 = Header+BitMap+PrimaryAccNo+fieldData;
		 */

		// String Header= asciiToHex("04821100");
		// String BitMap ="FCF6440108E1E4000000000014000000";
		// String fieldData=
		// asciiToHex("1656387200000051261821000000000013000000000014000000000015000000000000000000000323200723144442251230072260116011016540401111000589395POSDC207220200000009840436505185116105.Cecil.St>Singapore................SG159001001200200377402500400050260049001027004900102800377403000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321608608608058001012000000001400006016C00000000000084001101200000000130004701414608PTY00360005");
		// String requestMsg1100 = Header+BitMap+fieldData;

		// Mini statement with BPC data

		/*
		 * String Header = asciiToHex("04811100"); String BitMap =
		 * "FCF6440108E1E4000000000014000000"; String fieldData = asciiToHex(
		 * "1656387200000091283921000000000000000000000000000000000000000000000000000000000199200731174644251220073160116011016540401111000589395MS000020311200000001840436505185116105.Cecil.St>Singapore................SG159001001200200370402500400050260047015027004099902800370203000266031014100000760843080340141000007608430803601420200617174645039012200617174644065012000000000199978978978058001012000000001600006016C0000000000008400150120000000000800470141301010TY000109"
		 * ); String requestMsg1100 = Header + BitMap + fieldData;
		 */

		/*
		 * String Header = asciiToHex("04811100"); String BitMap =
		 * "FCF6440108E1E4000000000014000000"; String fieldData = asciiToHex(
		 * "1656387200000091283921000000000000000000000000000000000000000000000000000000000199200903174644251220072460116011016540401111000589395R000000001R400000001840436505185116105.Cecil.St>Singapore................SG159001001200200370402500400050260047015027004099902800370203000266031014100000760843080340141000007608430803601420200617174645039012200617174644065012000000000199978978978058001012000000001600006016C0000000000008400150120000000000000470141301010TY000109"
		 * ); String requestMsg1100 = Header + BitMap + fieldData;
		 */

		// FT with BPC data
		// String Header= asciiToHex("04981100");
		// String BitMap ="FCF6440108E1E4000000000016000000";
		// String fieldData=
		// asciiToHex("1656387200000051264021000000000013000000000014000000000015000000000000000000000323200722144442251220072260116011016540401111000589395FTBPC207220100000001840436505185116105.Cecil.St>Singapore................SG159001001200200370302500400050260049001027004099902800370203000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321608608608058001012000000001100006016C00000000000084001101200000000130004701414608PTY0036000514608PTY00360039");
		// String requestMsg1100 = Header + BitMap + fieldData;

		// Balance Enquiry with BPC data
		/*
		 * String Header= asciiToHex("04821100"); String BitMap
		 * ="FCF6440108E1E4000000000014000000"; String fieldData= asciiToHex(
		 * "1656387200000051263121000000000013000000000014000000000015000000000000000000000323200722144442251220072260116011016540401111000589395BEBPC207220100000001840436505185116105.Cecil.St>Singapore................SG159001001200200370202500400050260049001027004099902800370203000266031014100000773093820340141000007730938203601420200630144443039012200630144442065012000000000321608608608058001012000000001100006016C00000000000084001101200000000130004701414608PTY00360005"
		 * ); String requestMsg1100 = Header + BitMap + fieldData;
		 */

		byte[] requestMessage1100Array = hexStringToByteArray(requestMsg1100);

		outToServer.write(requestMessage1100Array);

		InputStream stream = clientSocket.getInputStream();

		byte[] data = new byte[800];

		int count = stream.read(data);

		System.out.println(count);
		System.out.println(byteArrayToHex(data));

		clientSocket.close();
	}

	public static String byteArrayToHex(byte[] A) {
		StringBuilder sb = new StringBuilder(A.length * 2);
		for (byte B : A)
			sb.append(String.format("%02X", B));
		return sb.toString();
	}

	public static byte[] hexStringToByteArray(String s) {
		int len = s.length();
		byte[] data = new byte[len / 2];
		for (int i = 0; i < len; i += 2) {
			data[(i / 2)] = ((byte) ((Character.digit(s.charAt(i), 16) << 4) + Character.digit(s.charAt(i + 1), 16)));
		}
		return data;

	}

	public static String asciiToHex(String ascii) {
		char[] ch = ascii.toCharArray();
		StringBuilder hex = new StringBuilder();

		for (char c : ch) {
			int i = (int) c;
			hex.append(Integer.toHexString(i).toUpperCase());
		}
		String hexConverted = String.valueOf(hex);
		return hexConverted;
	}
}
